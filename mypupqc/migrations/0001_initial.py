# Generated by Django 5.1 on 2025-03-06 01:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticlesSection',
            fields=[
                ('articleID', models.AutoField(primary_key=True, serialize=False)),
                ('articleTitle', models.CharField(max_length=100)),
                ('articleDescription', models.TextField()),
                ('articleImage', models.ImageField(upload_to='articlesSection/')),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('isActive', models.IntegerField(default=1)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarEvents',
            fields=[
                ('eventID', models.AutoField(primary_key=True, serialize=False)),
                ('eventName', models.CharField(max_length=100)),
                ('eventDate', models.DateField()),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('isActive', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Chikas',
            fields=[
                ('chikaID', models.AutoField(primary_key=True, serialize=False)),
                ('chikaTitle', models.CharField(max_length=100)),
                ('chikaDescription', models.TextField()),
                ('chikaImage', models.ImageField(upload_to='chika/')),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('isActive', models.IntegerField(default=1)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='FrequentlyAskedQuestions',
            fields=[
                ('faqID', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('isActive', models.IntegerField(default=1)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='HowToLinks',
            fields=[
                ('howtoID', models.AutoField(primary_key=True, serialize=False)),
                ('howtoName', models.TextField()),
                ('howtoLink', models.TextField()),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('isActive', models.IntegerField(default=1)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='MyPUPQCInformation',
            fields=[
                ('infoID', models.AutoField(primary_key=True, serialize=False)),
                ('infoTitle', models.CharField(max_length=100)),
                ('infoDescription', models.TextField()),
                ('isActive', models.IntegerField(default=1)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('organizationID', models.AutoField(primary_key=True, serialize=False)),
                ('organizationName', models.CharField(max_length=100)),
                ('organizationDescription', models.TextField()),
                ('organizationType', models.CharField(max_length=50)),
                ('organizationAdviser', models.TextField()),
                ('organizationTag', models.CharField(max_length=20)),
                ('organizationTagColor', models.CharField(max_length=50)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isActive', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PendingAccount',
            fields=[
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('userNumber', models.CharField(max_length=50, unique=True)),
                ('userType', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=100, null=True)),
                ('suffix', models.CharField(max_length=10, null=True)),
                ('birthYear', models.IntegerField()),
                ('birthMonth', models.IntegerField()),
                ('birthDay', models.IntegerField()),
                ('emailAddress', models.CharField(max_length=100)),
                ('mobileNo', models.CharField(max_length=11)),
                ('webMail', models.CharField(max_length=100)),
                ('programShortName', models.CharField(max_length=15, null=True)),
                ('programName', models.CharField(max_length=200, null=True)),
                ('isAdmin', models.IntegerField(default=0, null=True)),
                ('isModerator', models.IntegerField(default=0, null=True)),
                ('isActivated', models.IntegerField(default=0)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('programID', models.AutoField(primary_key=True, serialize=False)),
                ('programName', models.CharField(max_length=200)),
                ('programShortName', models.CharField(max_length=15)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isActive', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('schoolYearID', models.AutoField(primary_key=True, serialize=False)),
                ('schoolYear', models.CharField(max_length=10)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isActive', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='ServicesSection',
            fields=[
                ('serviceID', models.AutoField(primary_key=True, serialize=False)),
                ('serviceName', models.CharField(max_length=50)),
                ('serviceLink', models.TextField()),
                ('serviceIcon', models.ImageField(upload_to='servicesSection/')),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('isActive', models.IntegerField(default=1)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SlideShow',
            fields=[
                ('slideshowID', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='guestSlideShow/')),
                ('isActive', models.IntegerField(default=1)),
                ('section', models.CharField(max_length=50)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_number', models.TextField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('lastname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=100, null=True)),
                ('suffix', models.CharField(max_length=10, null=True)),
                ('dateOfBirth', models.DateField()),
                ('emailAddress', models.CharField(max_length=100, unique=True)),
                ('webMail', models.CharField(max_length=100, unique=True)),
                ('mobileNo', models.CharField(max_length=11)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('status', models.CharField(default='Pending', max_length=25)),
                ('isActive', models.IntegerField(default=1)),
                ('isRetained', models.IntegerField(default=0)),
                ('isFromBulkUpload', models.IntegerField(default=0)),
                ('credID', models.OneToOneField(db_column='credID', on_delete=django.db.models.deletion.CASCADE, related_name='faculty', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoryLog',
            fields=[
                ('historyID', models.AutoField(primary_key=True, serialize=False)),
                ('userType', models.CharField(max_length=50)),
                ('system', models.CharField(max_length=50)),
                ('actionType', models.CharField(max_length=50)),
                ('actionDescription', models.TextField()),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('userID', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionList',
            fields=[
                ('permissionID', models.AutoField(primary_key=True, serialize=False)),
                ('permissionName', models.CharField(max_length=50)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isActive', models.IntegerField(default=1)),
                ('facultyID', models.ForeignKey(db_column='facultyID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facultyPermission', to=settings.AUTH_USER_MODEL)),
                ('personnelID', models.ForeignKey(db_column='personnelID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personnelPermission', to=settings.AUTH_USER_MODEL)),
                ('studentID', models.ForeignKey(db_column='studentID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentPermission', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('lastname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=100, null=True)),
                ('suffix', models.CharField(max_length=10, null=True)),
                ('dateOfBirth', models.DateField()),
                ('emailAddress', models.CharField(max_length=100, unique=True)),
                ('webMail', models.CharField(max_length=100, unique=True)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('status', models.CharField(default='Pending', max_length=25)),
                ('isActive', models.IntegerField(default=1)),
                ('isRetained', models.IntegerField(default=0)),
                ('isFromBulkUpload', models.IntegerField(default=0)),
                ('credID', models.OneToOneField(db_column='credID', on_delete=django.db.models.deletion.CASCADE, related_name='personnel', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postID', models.AutoField(primary_key=True, serialize=False)),
                ('postContent', models.TextField()),
                ('postPage', models.CharField(max_length=50)),
                ('postStatus', models.CharField(default='Pending', max_length=50)),
                ('flagReasons', models.JSONField(null=True)),
                ('evaluatedTime', models.DateTimeField(null=True)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isActive', models.IntegerField(default=1)),
                ('postAuthorID', models.ForeignKey(db_column='postAuthorID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('postLabel', models.ForeignKey(db_column='postLabel', null=True, on_delete=django.db.models.deletion.SET_NULL, to='mypupqc.program')),
            ],
        ),
        migrations.CreateModel(
            name='PostImages',
            fields=[
                ('imageID', models.AutoField(primary_key=True, serialize=False)),
                ('imageLink', models.ImageField(upload_to='postImages/')),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('isActive', models.IntegerField(default=1)),
                ('postID', models.ForeignKey(db_column='postID', on_delete=django.db.models.deletion.CASCADE, related_name='postImages', to='mypupqc.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostLogs',
            fields=[
                ('postLogID', models.AutoField(primary_key=True, serialize=False)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isActive', models.IntegerField(default=1)),
                ('moderatorID', models.ForeignKey(db_column='moderatorID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('postID', models.ForeignKey(db_column='postID', on_delete=django.db.models.deletion.CASCADE, to='mypupqc.post')),
            ],
        ),
        migrations.CreateModel(
            name='RefreshTokens',
            fields=[
                ('tokenID', models.AutoField(primary_key=True, serialize=False)),
                ('refreshToken', models.TextField()),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('userID', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('lastname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=100, null=True)),
                ('suffix', models.CharField(max_length=10, null=True)),
                ('dateOfBirth', models.DateField()),
                ('mobileNo', models.CharField(max_length=11)),
                ('emailAddress', models.CharField(max_length=100, unique=True)),
                ('webMail', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(default='Pending', max_length=25)),
                ('createdTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('joinedTime', models.DateTimeField(null=True)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isAlumni', models.IntegerField(default=0)),
                ('isActive', models.IntegerField(default=1)),
                ('isRetained', models.IntegerField(default=0)),
                ('isFromBulkUpload', models.IntegerField(default=0)),
                ('credID', models.OneToOneField(db_column='credID', on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
                ('programID', models.ForeignKey(db_column='programID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='mypupqc.program')),
            ],
        ),
        migrations.CreateModel(
            name='StudentsOrganization',
            fields=[
                ('studentOrganizationID', models.AutoField(primary_key=True, serialize=False)),
                ('joinedTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('leftTime', models.DateTimeField(null=True)),
                ('updatedTime', models.DateTimeField(null=True)),
                ('isActive', models.IntegerField(default=1)),
                ('organizationID', models.ForeignKey(db_column='organizationID', on_delete=django.db.models.deletion.CASCADE, to='mypupqc.organization')),
                ('studentID', models.ForeignKey(db_column='studentID', on_delete=django.db.models.deletion.CASCADE, to='mypupqc.student')),
            ],
        ),
        migrations.CreateModel(
            name='UserLoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('browser', models.CharField(max_length=200)),
                ('device', models.CharField(max_length=200)),
                ('os', models.CharField(max_length=200)),
                ('ip_address', models.GenericIPAddressField()),
                ('location', models.CharField(max_length=200)),
                ('login_datetime', models.DateTimeField()),
                ('access_type', models.CharField(choices=[('web', 'Web Login'), ('api', 'API Login')], default='web', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mypupqc.faculty')),
            ],
            options={
                'ordering': ['-login_datetime'],
            },
        ),
    ]
